name: ci
on:
  push:
    branches:
      - master
      - main
jobs:
  tests:
    name: "Test - Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      matrix:
        os:
          - ubuntu-20.04  # Fix OS version to have old python availability
          #- ubuntu-latest
          #- macos-latest
          #- windows-latest
        python-version:
          - "2.7"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
      fail-fast: false

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v4"
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest requests_cache coverage
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi

      - name: "List package versions"
        run: |
          python -m pip list

      # Append coverage (-a)
      - name: "Execute tests with coverage"
        run: |
          python -m coverage run -a -m pytest -v

      - name: "Display coverage report"
        run: |
          python -m coverage report

  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.x
  #     - run: pip install -r requirements.txt
  #     - run: pip install mkdocstrings==0.14.0
  #     - run: pip install mkdocs-material
  #     - run: mkdocs gh-deploy --force